@startuml
'https://plantuml.com/sequence-diagram


class Central {
    -double costoViaje
    +Central(double costoViaje)
    +void cambiarPrecio(double precio)
    +double obtenerPrecio()
}

' Defino viaje() en el padre yq los hijos usan el mismo method
abstract class Tarjeta {
    -Central CE
    +Tarjeta(Central CE)
    ' necesito poder acceder al precio desde tarjetaRecargable => primero se lo pido a central
    +double obtenerPrecio()
    +{abstract} viajar()
    ' un method se puede hacer protegido, así los hijos pueden acceder y reescribir
    #{abstract} boolean puedeViajar()
}

' Redefino viajar() pués es distinto el method en c/u
' En una pregunta saldo y en la otra si quedan viajes
class TarjetaFija {
    -int viajes
    +TarjetaFija(Central CE)
    +void viajar()
}

class TarjetaRecargable {
    -double saldo
    +TarjetaRecargable(Central CE)
    +void viajar()
    +void recargar(double monto)
    +double obtenerSaldo()
    #boolean puedoViajar()
}
' Esta clase es una especialización de la clase TarjetaRecargable
' Tiene lo mismo y algo más, por eso deduzco que se trata de una herencia y no de una hermana
class TarjetaRecargableDescuento {
    -double descuento
    +TarjetaRecargableDescuento(Central CE, double descuento)
    #boolean puedoViajar()
}

Tarjeta *-- Central
Tarjeta <|-- TarjetaFija
Tarjeta <|-- TarjetaRecargable
TarjetaRecargable <|-- TarjetaRecargableDescuento
@enduml